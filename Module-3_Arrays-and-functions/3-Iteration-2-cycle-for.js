// Функція getEvenNumbers(start, end) має два параметри start та end, які є цілими числами.
// Доповни код функції так, щоб вона повертала масив усіх парних чисел від start до end.
// Якщо жодного парного числа немає, то масив має бути пустим.Парним вважається число, яке ділиться на 2 без остачі(10 % 2 === 0).
// Використовуй цикл for.

// Оголошена функція getEvenNumbers(start, end)
// Виклик функції getEvenNumbers(2, 5) повертає [2, 4]
// Виклик функції getEvenNumbers(3, 11) повертає [4, 6, 8, 10]
// Виклик функції getEvenNumbers(6, 12) повертає [6, 8, 10, 12]
// Виклик функції getEvenNumbers(8, 8) повертає [8]
// Виклик функції getEvenNumbers(7, 7) повертає []
// Виклик функції getEvenNumbers() з випадковими start і end повертає правильний масив

Щоб розрахувати масив усіх парних чисел від `start` до`end`, можна використати цикл `for` та метод `push()`.
Отже, код функції `getEvenNumbers` буде наступним:


function getEvenNumbers(start, end) {
  const evenNumbers = [];
  for (let i = start; i <= end; i++) {
    if (i % 2 === 0) {
      evenNumbers.push(i);
    }
  }
  return evenNumbers;
}


// Тепер, при виклику`getEvenNumbers(2, 5)`, отримаємо масив`[2, 4]`,
//     при виклику`getEvenNumbers(3, 11)` - масив`[4, 6, 8, 10]`,
//     при виклику`getEvenNumbers(6, 12)` - масив`[6, 8, 10, 12]`,
//     при виклику`getEvenNumbers(8, 8)` - масив`[8]`,
//     при виклику`getEvenNumbers(7, 7)` - порожній масив.

